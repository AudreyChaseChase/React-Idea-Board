{"version":3,"sources":["services/ideaServices.js","reducers/idea.js","reducers/notification.js","components/IdeaDescriptionArea.js","components/IdeaTile.js","components/IdeaAddForm.js","containers/IdeaList.js","containers/Notification.js","App.js","reducers/index.js","index.js","store.js"],"names":["IDEAS_STORE_KEY","DELAY_MS","getIdeasFromLocalStorage","JSON","parse","window","localStorage","getItem","ex","saveIdeasToLocalStorage","data","setItem","stringify","loadIdeas","_loadIdeas","apply","this","arguments","_callee","regenerator_default","a","wrap","_context","prev","next","abrupt","Promise","resolve","setTimeout","stop","getNewIdeaData","_getNewIdeaData","_callee2","_context2","ideas","newIdea","id","uuid","created_date","Date","toISOString","push","updateIdea","_x","_updateIdea","_callee3","_ref","title","body","_context3","reject","ideaToUpdate","find","x","response","status","deleteIdea","_x2","_deleteIdea","_callee4","_context4","filter","api","ideaServices","LOAD_IDEAS","LOAD_IDEAS_SUCCESS","LOAD_IDEAS_FAILURE","ADD_IDEA","ADD_IDEA_SUCCESS","ADD_IDEA_FAILURE","UPDATE_IDEA","UPDATE_IDEA_SUCCESS","UPDATE_IDEA_FAILURE","DELETE_IDEA","DELETE_IDEA_SUCCESS","DELETE_IDEA_FAILURE","CHANGE_SORT_BY","initialState","isLoading","sortBy","SHOW_NOTIFICATION","HIDE_NOTIFICATION","notification","IdeaDescriptionArea","state","count","onChange","_this","setState","textarea","value","length","_this2","remainingCharCount","props","maxLength","showCounter","threshold","react_default","createElement","Object","assign","textAreaProps","ref","node","onBlur","className","React","Component","defaultProps","IdeaTile","titleField","focus","_this$props","_this$props$idea","idea","createdDate","onDelete","formattedDate","toString","replace","onClick","aria-hidden","defaultValue","placeholder","handleBlur","rows","IdeaDescriptionArea_IdeaDescriptionArea","IdeaAddForm","IdeaList","showNotification","_this$props2","changeSortBy","addIdea","autoComplete","FormControl","InputLabel","NativeSelect","e","target","_this$props3","map","IdeaTile_IdeaTile","key","_ref2","onIdeaBlur","IdeaAddForm_IdeaAddForm","renderSortOptions","renderList","actions","asyncToGenerator","mark","dispatch","type","sent","payload","t0","_ref3","_ref4","_ref5","_ref6","_x3","_ref7","_x4","message","sortIdeas","sort","b","localeCompare","connect","_state$ideas","App","role","aria-label","src_containers_IdeaList","containers_Notification","combineReducers","undefined","action","objectSpread","concat","toConsumableArray","currentIdeas","ReactDOM","render","es","store","createStore","rootReducer","applyMiddleware","thunk","configureStore","App_App","document","getElementById"],"mappings":"0lBAEMA,EAAkB,cAClBC,EAAW,IAEjB,SAASC,IACP,IACE,OAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,IAAoB,MAClE,MAAOQ,GACP,MAAO,IAIX,SAASC,EAAwBC,GAC/B,IACEL,OAAOC,aAAaK,QAAQX,EAAiBG,KAAKS,UAAUF,IAC5D,MAAOF,KAKJ,SAAeK,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACE,IAAIC,QAAQ,SAACC,GAClB,IAAMjB,EAAOR,IACb0B,WAAW,WACTD,EAAQ,CAAEjB,UACTT,MALA,wBAAAqB,EAAAO,SAAAX,6BASA,SAAeY,IAAtB,OAAAC,EAAAhB,MAAAC,KAAAC,sDAAO,SAAAe,IAAA,OAAAb,EAAAC,EAAAC,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cAAAS,EAAAR,OAAA,SACE,IAAIC,QAAQ,SAACC,GAClBC,WAAW,WACT,IAAMM,EAAQhC,IACRiC,EAAU,CACdC,GAAIC,MACJC,cAAc,IAAIC,MAAOC,eAE3BN,EAAMO,KAAKN,GACX1B,EAAwByB,GACxBP,EAAQ,CAAEjB,KAAMyB,KACflC,MAXA,wBAAAgC,EAAAJ,SAAAG,6BAeA,SAAeU,EAAtBC,GAAA,OAAAC,EAAA7B,MAAAC,KAAAC,sDAAO,SAAA4B,EAAAC,GAAA,IAAAV,EAAAW,EAAAC,EAAA,OAAA7B,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAA4BY,EAA5BU,EAA4BV,GAAIW,EAAhCD,EAAgCC,MAAOC,EAAvCF,EAAuCE,KAAvCC,EAAAxB,OAAA,SACE,IAAIC,QAAQ,SAACC,EAASuB,GAC3B,IAAMhB,EAAQhC,IACRiD,EAAejB,EAAMkB,KAAK,SAAAC,GAAC,OAAIA,EAAEjB,KAAOA,IACzCe,GAILA,EAAaJ,MAAQA,EACrBI,EAAaH,KAAOA,EACpBvC,EAAwByB,GACxBN,WAAW,WACTD,EAAQ,KACP1B,IARDiD,EAAO,CAAEI,SAAU,CAAEC,OAAQ,UAL5B,wBAAAN,EAAApB,SAAAgB,6BAiBA,SAAeW,EAAtBC,GAAA,OAAAC,EAAA3C,MAAAC,KAAAC,sDAAO,SAAA0C,EAA0BvB,GAA1B,OAAAjB,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAAnC,OAAA,SACE,IAAIC,QAAQ,SAACC,GAElBlB,EADcP,IAA2B2D,OAAO,SAAAR,GAAC,OAAIA,EAAEjB,KAAOA,KAE9DR,WAAW,WACTD,EAAQ,CAAEjB,KAAM,MACfT,MANA,wBAAA2D,EAAA/B,SAAA8B,6BC1DP,IAAMG,EAAMC,EAGNC,EAAa,aACbC,EAAqB,qBACrBC,EAAqB,qBAErBC,EAAW,WACXC,EAAmB,mBACnBC,EAAmB,mBAEnBC,EAAc,cACdC,EAAsB,sBACtBC,EAAsB,sBAEtBC,EAAc,cACdC,EAAsB,sBACtBC,EAAsB,sBAEtBC,EAAiB,iBAEVC,EAAe,CAC1BnE,KAAM,GACNoE,WAAW,EACXC,OAAQ,eCvBV,IAAMC,EAAoB,oBACpBC,EAAoB,oBAEbJ,EAAe,CAC1BK,aAAc,sBCNKC,6MAMnBC,MAAQ,CACNC,MAAO,KAGTC,SAAW,WACTC,EAAKC,SAAS,CAAEH,MAAOE,EAAKE,SAASC,MAAMC,kFAGpC,IAAAC,EAAA5E,KACD6E,EAAqB7E,KAAK8E,MAAMC,UAAY/E,KAAKoE,MAAMC,MACvDW,EAAcH,EAAqB7E,KAAK8E,MAAMG,UACpD,OACEC,EAAA9E,EAAA+E,cAAA,WACED,EAAA9E,EAAA+E,cAAA,WAAAC,OAAAC,OAAA,GACMrF,KAAK8E,MAAMQ,cADjB,CAEEP,UAAW/E,KAAK8E,MAAMC,UACtBT,SAAUtE,KAAKsE,SACfiB,IAAK,SAAAC,GAAI,OAAIZ,EAAKH,SAAWe,GAC7BC,OAAQ,kBAAMb,EAAKE,MAAMW,OAAOb,EAAKH,SAASC,WAE/CM,GACCE,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,qBACZb,EADH,4BA3BuCc,IAAMC,WAAlCzB,EACZ0B,aAAe,CACpBJ,OAAQ,aACRR,UAAW,cCAMa,8LAQa,KAA1B9F,KAAK+F,WAAWrB,OAClB1E,KAAK+F,WAAWC,8CAIQ,IAAfhE,EAAeF,EAAfE,KAAMD,EAASD,EAATC,MACjB/B,KAAK8E,MAAMW,OAAO,CAAE1D,QAAOC,0CAGpB,IAAAuC,EAAAvE,KAAAiG,EACkDjG,KAAK8E,MADvDoB,EAAAD,EACCE,KAAQC,EADTF,EACSE,YAAapE,EADtBkE,EACsBlE,KAAMD,EAD5BmE,EAC4BnE,MAASsE,EADrCJ,EACqCI,SAGtCC,EAFa,IAAI/E,KAAK6E,GAAaG,WAERC,QADnB,UACkC,IAChD,OACEtB,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,aACbR,EAAA9E,EAAA+E,cAAA,UAAQO,UAAU,wBAAwBe,QAASJ,GACjDnB,EAAA9E,EAAA+E,cAAA,KAAGO,UAAU,cAAcgB,cAAY,UAEzCxB,EAAA9E,EAAA+E,cAAA,YACEO,UAAU,mBACViB,aAAc5E,EACdwD,IAAK,SAAAC,GAAI,OAAIjB,EAAKwB,WAAaP,GAC/BoB,YAAY,eACZnB,OAAQ,kBAAMlB,EAAKsC,WAAW,CAAE7E,OAAMD,MAAOwC,EAAKwB,WAAWrB,SAC7DoC,KAAK,MAEP5B,EAAA9E,EAAA+E,cAAC4B,EAAD,CACEzB,cAAe,CACbI,UAAW,yBACXiB,aAAc3E,EACd4E,YAAa,qBACbE,KAAM,GAERrB,OAAQ,SAACf,GAAD,OAAWH,EAAKsC,WAAW,CAAE9E,QAAOC,KAAM0C,KAClDK,UAAW,MAEbG,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,mBAAmBY,WA7CJX,IAAMC,iBCH7B,SAASoB,IACtB,OACE9B,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,mBACbR,EAAA9E,EAAA+E,cAAA,YACAD,EAAA9E,EAAA+E,cAAA,YACAD,EAAA9E,EAAA+E,cAAA,YACAD,EAAA9E,EAAA+E,cAAA,kDCGA8B,oTAcMpH,EAAcG,KAAK8E,MAAnBjF,mBACFA,2QAGYmC,SAAMD,UAAOX,SACUpB,KAAK8E,MAAtCpD,eAAYwF,8BACdxF,EAAW,CAAEM,OAAMD,QAAOX,cAChC8F,EAAiB,wLAGC,IAAAC,EACyBnH,KAAK8E,MAAxCf,EADUoD,EACVpD,OAAQqD,EADED,EACFC,aAAcC,EADZF,EACYE,QAC9B,OACEnC,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,aACbR,EAAA9E,EAAA+E,cAAA,UAAQO,UAAU,WAAWe,QAASY,GAAtC,YAGAnC,EAAA9E,EAAA+E,cAAA,QAAMO,UAAU,YAAY4B,aAAa,OACvCpC,EAAA9E,EAAA+E,cAACoC,GAAA,EAAD,KACErC,EAAA9E,EAAA+E,cAACqC,GAAA,EAAD,gBACEtC,EAAA9E,EAAA+E,cAACsC,GAAA,EAAD,CAAc/C,MAAOX,EAAQ2B,UAAU,mBAAmBpB,SAAU,SAAAoD,GAAC,OAAIN,EAAaM,EAAEC,OAAOjD,SAC7FQ,EAAA9E,EAAA+E,cAAA,UAAQT,MAAM,eAAd,gBACAQ,EAAA9E,EAAA+E,cAAA,UAAQT,MAAM,SAAd,kDAQD,IAAAH,EAAAvE,KAAA4H,EACmB5H,KAAK8E,MAA3B5D,EADG0G,EACH1G,MAAOsB,EADJoF,EACIpF,WACf,OACE0C,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,aACZxE,EAAM2G,IAAI,SAAA1B,GAAI,OACbjB,EAAA9E,EAAA+E,cAAC2C,EAAD,CACEC,IAAK5B,EAAK/E,GACV+E,KAAMA,EACNV,OAAQ,SAAAuC,GAAA,IAAGhG,EAAHgG,EAAGhG,KAAMD,EAATiG,EAASjG,MAAT,OAAqBwC,EAAK0D,WAAW,CAAE7G,GAAI+E,EAAK/E,GAAIY,OAAMD,WAClEsE,SAAU,kBAAM7D,EAAW2D,EAAK/E,2CASxC,OADsBpB,KAAK8E,MAAnBhB,UACcoB,EAAA9E,EAAA+E,cAAC+C,EAAD,MAEpBhD,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,kBACZ1F,KAAKmI,oBACLnI,KAAKoI,qBAlESzC,IAAMC,WAwEvByC,GAAU,CACdxI,ULAK,WACL,sBAAAiC,EAAAsD,OAAAkD,EAAA,EAAAlD,CAAAjF,EAAAC,EAAAmI,KAAO,SAAArI,EAAOsI,GAAP,IAAAR,EAAAtI,EAAA,OAAAS,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLgI,EAAS,CAAEC,KAAMzF,IADZ1C,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGoBsC,EAAIjD,YAHxB,cAAAmI,EAAA1H,EAAAoI,KAGKhJ,EAHLsI,EAGKtI,KAHLY,EAAAG,OAAA,SAII+H,EAAS,CACdC,KAAMxF,EACN0F,QAASjJ,EAAKmI,IAAI,SAAAxF,GAAC,MAAK,CACtBjB,GAAIiB,EAAEjB,GACNW,MAAOM,EAAEN,MACTC,KAAMK,EAAEL,KACRoE,YAAa/D,EAAEf,mBAVhB,cAAAhB,EAAAC,KAAA,EAAAD,EAAAsI,GAAAtI,EAAA,SAAAA,EAAAG,OAAA,SAcI+H,EAAS,CAAEC,KAAMvF,EAAoByF,QAAOrI,EAAAsI,MAdhD,yBAAAtI,EAAAO,SAAAX,EAAA,iBAAP,gBAAAyB,GAAA,OAAAG,EAAA/B,MAAAC,KAAAC,YAAA,IKAAoH,QLmBK,WACL,sBAAAwB,EAAAzD,OAAAkD,EAAA,EAAAlD,CAAAjF,EAAAC,EAAAmI,KAAO,SAAAvH,EAAOwH,GAAP,IAAAM,EAAApJ,EAAA,OAAAS,EAAAC,EAAAC,KAAA,SAAAY,GAAA,cAAAA,EAAAV,KAAAU,EAAAT,MAAA,cACLgI,EAAS,CAAEC,KAAMtF,IADZlC,EAAAV,KAAA,EAAAU,EAAAT,KAAA,EAGoBsC,EAAIhC,iBAHxB,cAAAgI,EAAA7H,EAAAyH,KAGKhJ,EAHLoJ,EAGKpJ,KAHLuB,EAAAR,OAAA,SAII+H,EAAS,CACdC,KAAMrF,EACNuF,QAAS,CACPvH,GAAI1B,EAAK0B,GACTgF,YAAa1G,EAAK4B,iBARnB,cAAAL,EAAAV,KAAA,EAAAU,EAAA2H,GAAA3H,EAAA,SAAAA,EAAAR,OAAA,SAYI+H,EAAS,CAAEC,KAAMpF,EAAkBsF,QAAO1H,EAAA2H,MAZ9C,yBAAA3H,EAAAJ,SAAAG,EAAA,iBAAP,gBAAAyB,GAAA,OAAAoG,EAAA9I,MAAAC,KAAAC,YAAA,IKnBAyB,WLoCK,SAAAqH,GAAyC,IAAnB3H,EAAmB2H,EAAnB3H,GAAIY,EAAe+G,EAAf/G,KAAMD,EAASgH,EAAThH,MACrC,sBAAAiH,EAAA5D,OAAAkD,EAAA,EAAAlD,CAAAjF,EAAAC,EAAAmI,KAAO,SAAA1G,EAAO2G,GAAP,OAAArI,EAAAC,EAAAC,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACLgI,EAAS,CAAEC,KAAMnF,IADZrB,EAAA1B,KAAA,EAAA0B,EAAAzB,KAAA,EAGGsC,EAAIpB,WAAW,CAAEN,KAAIY,OAAMD,UAH9B,cAAAE,EAAAxB,OAAA,SAII+H,EAAS,CACdC,KAAMlF,EACN4C,KAAM,CAAE/E,KAAIY,OAAMD,YANjB,cAAAE,EAAA1B,KAAA,EAAA0B,EAAA2G,GAAA3G,EAAA,SAAAA,EAAAxB,OAAA,SASI+H,EAAS,CAAEC,KAAMjF,EAAqBmF,QAAO1G,EAAA2G,MATjD,yBAAA3G,EAAApB,SAAAgB,EAAA,iBAAP,gBAAAoH,GAAA,OAAAD,EAAAjJ,MAAAC,KAAAC,YAAA,IKpCAuC,WLkDK,SAAoBpB,GACzB,sBAAA8H,EAAA9D,OAAAkD,EAAA,EAAAlD,CAAAjF,EAAAC,EAAAmI,KAAO,SAAA5F,EAAO6F,GAAP,OAAArI,EAAAC,EAAAC,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cACLgI,EAAS,CAAEC,KAAMhF,IADZb,EAAArC,KAAA,EAAAqC,EAAApC,KAAA,EAGGsC,EAAIN,WAAWpB,GAHlB,cAAAwB,EAAAnC,OAAA,SAII+H,EAAS,CACdC,KAAM/E,EACNtC,QANC,cAAAwB,EAAArC,KAAA,EAAAqC,EAAAgG,GAAAhG,EAAA,SAAAA,EAAAnC,OAAA,SASI+H,EAAS,CAAEC,KAAM9E,EAAqBgF,QAAO/F,EAAAgG,MATjD,yBAAAhG,EAAA/B,SAAA8B,EAAA,iBAAP,gBAAAwG,GAAA,OAAAD,EAAAnJ,MAAAC,KAAAC,YAAA,IKlDAiH,iBJ1DK,SAA0BkC,GAC/B,OAAO,SAAAZ,GACLA,EAAS,CAAEC,KAAMzE,EAAmBE,aAAckF,IAElDxI,WAAW,WACT4H,EAAS,CAAEC,KAAMxE,KAChB,QIqDLmD,aL+DK,SAAsBrD,GAC3B,MAAO,CACL0E,KAAM7E,EACNG,YKtDJ,SAASsF,GAAUnI,EAAO6C,GACxB,MAAe,gBAAXA,EACK7C,EAAMoI,KAAK,SAAClJ,EAAGmJ,GACpB,OAAO,IAAIhI,KAAKnB,EAAEgG,aAAe,IAAI7E,KAAKgI,EAAEnD,eAGjC,UAAXrC,EACK7C,EAAMoI,KAAK,SAAClJ,EAAGmJ,GAAJ,OAAUnJ,EAAE2B,MAAMyH,cAAcD,EAAExH,SAE/Cb,EAGMuI,mBArBf,SAAyBrF,GAAO,IAAAsF,EACMtF,EAAMlD,MAAlCxB,EADsBgK,EACtBhK,KAAMoE,EADgB4F,EAChB5F,UAAWC,EADK2F,EACL3F,OACzB,MAAO,CACL7C,MAAOmI,GAAU3J,EAAMqE,GACvBD,YACAC,WAgBoCsE,GAAzBoB,CAAkCxC,UC/FlCwC,mBANf,SAAyBrF,GACvB,MAAO,CACLF,aAAcE,EAAMF,aAAaA,eAItBuF,CAff,SAAA3H,GAAwC,IAAhBoC,EAAgBpC,EAAhBoC,aACtB,OAAKA,EAEHgB,EAAA9E,EAAA+E,cAAA,OAAKO,UAAU,gBACZxB,GAHqB,OCAPyF,2LAEb,OACIzE,EAAA9E,EAAA+E,cAAA,WACID,EAAA9E,EAAA+E,cAAA,UAAQO,UAAU,UAClBR,EAAA9E,EAAA+E,cAAA,QAAMyE,KAAK,MAAMC,aAAW,SACvB,IAFL,cAKA3E,EAAA9E,EAAA+E,cAAC2E,GAAD,MACA5E,EAAA9E,EAAA+E,cAAC4E,GAAD,cAViBnE,wCCDlBoE,gBAAgB,CAC9B9I,MR2Bc,WAA6C,IAA9BkD,EAA8BnE,UAAA0E,OAAA,QAAAsF,IAAAhK,UAAA,GAAAA,UAAA,GAAtB4D,EAAcqG,EAAQjK,UAAA0E,OAAA,EAAA1E,UAAA,QAAAgK,EAC1D,OAAQC,EAAOzB,MACb,KAAKzF,EACH,OAAOoC,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEEN,WAAW,IAEf,KAAKb,EACH,OAAOmC,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEE1E,KAAMwK,EAAOvB,QACb7E,WAAW,IAEf,KAAKZ,EACH,OAAOkC,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEEN,WAAW,IAEf,KAAKV,EACH,IAAMjC,EAAOiE,OAAA+E,EAAA,EAAA/E,CAAA,GACR8E,EAAOvB,QADC,CAEX5G,MAAO,GACPC,KAAM,KAER,OAAOoD,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEE1E,KAAI,GAAA0K,OAAAhF,OAAAiF,EAAA,EAAAjF,CAAMhB,EAAM1E,MAAZ,CAAkByB,MAE1B,KAAKoC,EACH,IAAM+G,EAAYlF,OAAAiF,EAAA,EAAAjF,CAAOhB,EAAM1E,MACzByC,EAAemI,EAAalI,KAAK,SAAAC,GAAC,OAAIA,EAAEjB,KAAO8I,EAAO/D,KAAK/E,KAGjE,OAFAe,EAAaJ,MAAQmI,EAAO/D,KAAKpE,MACjCI,EAAaH,KAAOkI,EAAO/D,KAAKnE,KACzBoD,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEE1E,KAAM4K,IAEV,KAAK5G,EACH,OAAO0B,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEE1E,KAAM0E,EAAM1E,KAAKmD,OAAO,SAAAR,GAAC,OAAIA,EAAEjB,KAAO8I,EAAO9I,OAEjD,KAAKwC,EACH,OAAOwB,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEEL,OAAQmG,EAAOnG,SAEnB,QACE,OAAOK,IQ1EZF,aPOc,WAAoD,IAA9BE,EAA8BnE,UAAA0E,OAAA,QAAAsF,IAAAhK,UAAA,GAAAA,UAAA,GAAtB4D,EAAcqG,EAAQjK,UAAA0E,OAAA,EAAA1E,UAAA,QAAAgK,EACjE,OAAQC,EAAOzB,MACb,KAAKzE,EACH,OAAOoB,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEEF,aAAcgG,EAAOhG,eAEzB,KAAKD,EACH,OAAOmB,OAAA+E,EAAA,EAAA/E,CAAA,GACFhB,EADL,CAEEF,aAAc,OAElB,QACE,OAAOE,MQlBbmG,IAASC,OACLtF,EAAA9E,EAAA+E,cAACsF,EAAA,EAAD,CAAUC,MCJC,WAA2C,IAAnB7G,EAAmB5D,UAAA0E,OAAA,QAAAsF,IAAAhK,UAAA,GAAAA,UAAA,GAAJ,GACrD,OAAO0K,aACLC,GACA/G,EACAgH,aAAgBC,ODAEC,IACb7F,EAAA9E,EAAA+E,cAAC6F,GAAD,OAENC,SAASC,eAAe","file":"static/js/main.a29a3e27.chunk.js","sourcesContent":["import uuid from 'uuid/v4';\r\n\r\nconst IDEAS_STORE_KEY = 'IDEAS_STORE';\r\nconst DELAY_MS = 500;\r\n\r\nfunction getIdeasFromLocalStorage() {\r\n  try {\r\n    return JSON.parse(window.localStorage.getItem(IDEAS_STORE_KEY) || '[]');\r\n  } catch (ex) {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction saveIdeasToLocalStorage(data) {\r\n  try {\r\n    window.localStorage.setItem(IDEAS_STORE_KEY, JSON.stringify(data));\r\n  } catch (ex) {\r\n    // prevent issue with browser that don't support local storage\r\n  }\r\n}\r\n\r\nexport async function loadIdeas() {\r\n  return new Promise((resolve) => {\r\n    const data = getIdeasFromLocalStorage();\r\n    setTimeout(() => {\r\n      resolve({ data });\r\n    }, DELAY_MS);\r\n  });\r\n}\r\n\r\nexport async function getNewIdeaData() {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      const ideas = getIdeasFromLocalStorage();\r\n      const newIdea = {\r\n        id: uuid(),\r\n        created_date: new Date().toISOString(),\r\n      };\r\n      ideas.push(newIdea);\r\n      saveIdeasToLocalStorage(ideas);\r\n      resolve({ data: newIdea });\r\n    }, DELAY_MS);\r\n  });\r\n}\r\n\r\nexport async function updateIdea({ id, title, body }) {\r\n  return new Promise((resolve, reject) => {\r\n    const ideas = getIdeasFromLocalStorage();\r\n    const ideaToUpdate = ideas.find(x => x.id === id);\r\n    if (!ideaToUpdate) {\r\n      reject({ response: { status: 400 } });\r\n      return;\r\n    }\r\n    ideaToUpdate.title = title;\r\n    ideaToUpdate.body = body;\r\n    saveIdeasToLocalStorage(ideas);\r\n    setTimeout(() => {\r\n      resolve({});\r\n    }, DELAY_MS);\r\n  });\r\n}\r\n\r\nexport async function deleteIdea(id) {\r\n  return new Promise((resolve) => {\r\n    const ideas = getIdeasFromLocalStorage().filter(x => x.id !== id);\r\n    saveIdeasToLocalStorage(ideas);\r\n    setTimeout(() => {\r\n      resolve({ data: {} });\r\n    }, DELAY_MS);\r\n  });\r\n}","/**\r\n * Ducks file structure\r\n*/\r\nimport * as ideaServices from '../services/ideaServices';\r\nconst api = ideaServices;\r\n\r\n/* Actions */\r\nconst LOAD_IDEAS = 'LOAD_IDEAS';\r\nconst LOAD_IDEAS_SUCCESS = 'LOAD_IDEAS_SUCCESS';\r\nconst LOAD_IDEAS_FAILURE = 'LOAD_IDEAS_FAILURE';\r\n\r\nconst ADD_IDEA = 'ADD_IDEA';\r\nconst ADD_IDEA_SUCCESS = 'ADD_IDEA_SUCCESS';\r\nconst ADD_IDEA_FAILURE = 'ADD_IDEA_FAILURE';\r\n\r\nconst UPDATE_IDEA = 'UPDATE_IDEA';\r\nconst UPDATE_IDEA_SUCCESS = 'UPDATE_IDEA_SUCCESS';\r\nconst UPDATE_IDEA_FAILURE = 'UPDATE_IDEA_FAILURE';\r\n\r\nconst DELETE_IDEA = 'DELETE_IDEA';\r\nconst DELETE_IDEA_SUCCESS = 'DELETE_IDEA_SUCCESS';\r\nconst DELETE_IDEA_FAILURE = 'DELETE_IDEA_FAILURE';\r\n\r\nconst CHANGE_SORT_BY = 'CHANGE_SORT_BY';\r\n\r\nexport const initialState = {\r\n  data: [],\r\n  isLoading: false,\r\n  sortBy: 'createdDate',\r\n};\r\n\r\n/* Reducer */\r\nexport default function ideas(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_IDEAS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case LOAD_IDEAS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        isLoading: false,\r\n      };\r\n    case LOAD_IDEAS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n      };\r\n    case ADD_IDEA_SUCCESS:\r\n      const newIdea = {\r\n        ...action.payload,\r\n        title: '',\r\n        body: '',\r\n      };\r\n      return {\r\n        ...state,\r\n        data: [...state.data, newIdea],\r\n      };\r\n    case UPDATE_IDEA_SUCCESS:\r\n      const currentIdeas = [...state.data];\r\n      const ideaToUpdate = currentIdeas.find(x => x.id === action.idea.id);\r\n      ideaToUpdate.title = action.idea.title;\r\n      ideaToUpdate.body = action.idea.body;\r\n      return {\r\n        ...state,\r\n        data: currentIdeas,\r\n      };\r\n    case DELETE_IDEA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter(x => x.id !== action.id),\r\n      };\r\n    case CHANGE_SORT_BY:\r\n      return {\r\n        ...state,\r\n        sortBy: action.sortBy,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/* Action Creators */\r\nexport function loadIdeas() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: LOAD_IDEAS });\r\n    try {\r\n      const { data } = await api.loadIdeas();\r\n      return dispatch({\r\n        type: LOAD_IDEAS_SUCCESS,\r\n        payload: data.map(x => ({\r\n          id: x.id,\r\n          title: x.title,\r\n          body: x.body,\r\n          createdDate: x.created_date,\r\n        })),\r\n      });\r\n    } catch (ex) {\r\n      return dispatch({ type: LOAD_IDEAS_FAILURE, payload: ex });\r\n    }\r\n  }\r\n};\r\n\r\nexport function addIdea() {\r\n  return async (dispatch) => {\r\n    dispatch({ type: ADD_IDEA });\r\n    try {\r\n      const { data } = await api.getNewIdeaData();\r\n      return dispatch({\r\n        type: ADD_IDEA_SUCCESS,\r\n        payload: {\r\n          id: data.id,\r\n          createdDate: data.created_date,\r\n        },\r\n      });\r\n    } catch (ex) {\r\n      return dispatch({ type: ADD_IDEA_FAILURE, payload: ex });\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateIdea({ id, body, title }) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: UPDATE_IDEA });\r\n    try {\r\n      await api.updateIdea({ id, body, title });\r\n      return dispatch({\r\n        type: UPDATE_IDEA_SUCCESS,\r\n        idea: { id, body, title },\r\n      });\r\n    } catch (ex) {\r\n      return dispatch({ type: UPDATE_IDEA_FAILURE, payload: ex });\r\n    }\r\n  }\r\n}\r\n\r\nexport function deleteIdea(id) {\r\n  return async (dispatch) => {\r\n    dispatch({ type: DELETE_IDEA });\r\n    try {\r\n      await api.deleteIdea(id);\r\n      return dispatch({\r\n        type: DELETE_IDEA_SUCCESS,\r\n        id,\r\n      });\r\n    } catch (ex) {\r\n      return dispatch({ type: DELETE_IDEA_FAILURE, payload: ex });\r\n    }\r\n  }\r\n}\r\n\r\nexport function changeSortBy(sortBy) {\r\n  return {\r\n    type: CHANGE_SORT_BY,\r\n    sortBy,\r\n  };\r\n}","\r\n/**\r\n * Ducks file structure\r\n*/\r\n/* Actions */\r\nconst SHOW_NOTIFICATION = 'SHOW_NOTIFICATION';\r\nconst HIDE_NOTIFICATION = 'HIDE_NOTIFICATION';\r\n\r\nexport const initialState = {\r\n  notification: null,\r\n};\r\n\r\n/* Reducer */\r\nexport default function notification(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SHOW_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notification: action.notification,\r\n      };\r\n    case HIDE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        notification: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n/* Action Creators */\r\nexport function showNotification(message) {\r\n  return dispatch => {\r\n    dispatch({ type: SHOW_NOTIFICATION, notification: message });\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: HIDE_NOTIFICATION });\r\n    }, 1500);\r\n  };\r\n}","import React from 'react';\r\nimport './IdeaDescriptionArea.scss';\r\n\r\nexport default class IdeaDescriptionArea extends React.Component {\r\n  static defaultProps = {\r\n    onBlur: () => {},\r\n    threshold: 15,\r\n  }\r\n\r\n  state = {\r\n    count: 0,\r\n  }\r\n\r\n  onChange = () => {\r\n    this.setState({ count: this.textarea.value.length });\r\n  }\r\n\r\n  render() {\r\n    const remainingCharCount = this.props.maxLength - this.state.count;\r\n    const showCounter = remainingCharCount < this.props.threshold;\r\n    return (\r\n      <div>\r\n        <textarea\r\n          {...this.props.textAreaProps}\r\n          maxLength={this.props.maxLength}\r\n          onChange={this.onChange}\r\n          ref={node => this.textarea = node}\r\n          onBlur={() => this.props.onBlur(this.textarea.value)}\r\n        />\r\n        {showCounter && (\r\n          <div className=\"textarea__counter\">\r\n            {remainingCharCount} chars remaining\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './IdeaTile.scss';\r\nimport IdeaDescriptionArea from './IdeaDescriptionArea';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nexport default class IdeaTile extends React.Component {\r\n  static propTypes = {\r\n    idea: PropTypes.object.isRequired,\r\n    onBlur: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.titleField.value === '') {\r\n      this.titleField.focus();\r\n    }\r\n  }\r\n\r\n  handleBlur({ body, title }) {\r\n    this.props.onBlur({ title, body });\r\n  }\r\n\r\n  render() {\r\n    const { idea: { createdDate, body, title }, onDelete } = this.props;\r\n    const dataString = new Date(createdDate).toString()\r\n    const regex = / GMT.*/g;\r\n    const formattedDate = dataString.replace(regex, \"\");\r\n    return (\r\n      <div className=\"idea-tile\">\r\n        <button className=\"idea-tile__delete-btn\" onClick={onDelete}>\r\n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\r\n        </button>\r\n        <textarea\r\n          className=\"idea-tile__title\"\r\n          defaultValue={title}\r\n          ref={node => this.titleField = node}\r\n          placeholder=\"Add title...\"\r\n          onBlur={() => this.handleBlur({ body, title: this.titleField.value })}\r\n          rows=\"2\"\r\n        />\r\n        <IdeaDescriptionArea\r\n          textAreaProps={{\r\n            className: 'idea-tile__description',\r\n            defaultValue: body,\r\n            placeholder: 'Add description...',\r\n            rows: 4\r\n          }}\r\n          onBlur={(value) => this.handleBlur({ title, body: value })}\r\n          maxLength={140}\r\n        />\r\n        <div className=\"idea-tile__date\">{formattedDate}</div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './IdeaAddForm.scss';\r\n\r\nexport default function IdeaAddForm() {\r\n  return (\r\n    <div className=\"loader-ellipsis\">\r\n      <div />\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { loadIdeas, addIdea, updateIdea, deleteIdea, changeSortBy } from '../reducers/idea';\r\nimport { showNotification } from '../reducers/notification';\r\nimport IdeaTile from '../components/IdeaTile';\r\nimport IdeaAddForm from '../components/IdeaAddForm'\r\nimport './IdeaList.scss';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nclass IdeaList extends React.Component {\r\n  static propTypes = {\r\n    fetchIdeas: PropTypes.func.isRequired,\r\n    addIdea: PropTypes.func.isRequired,\r\n    updateIdea: PropTypes.func.isRequired,\r\n    deleteIdea: PropTypes.func.isRequired,\r\n    showNotification: PropTypes.func.isRequired,\r\n    changeSortBy: PropTypes.func.isRequired,\r\n    ideas: PropTypes.array.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n    sortBy: PropTypes.string.isRequired,\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { loadIdeas } = this.props;\r\n    await loadIdeas();\r\n  }\r\n\r\n  async onIdeaBlur ({ body, title, id }) {\r\n    const { updateIdea, showNotification } = this.props;\r\n    await updateIdea({ body, title, id });\r\n    showNotification('Changes have been successfully saved.');\r\n  }\r\n\r\n  renderSortOptions() {\r\n    const { sortBy, changeSortBy, addIdea, } = this.props;\r\n    return (\r\n      <div className=\"idea-menu\">\r\n        <button className=\"idea-add\" onClick={addIdea} >\r\n          New Idea\r\n        </button>\r\n        <form className=\"idea-sort\" autoComplete=\"off\">\r\n          <FormControl>\r\n            <InputLabel>Sort by</InputLabel>\r\n              <NativeSelect value={sortBy} className=\"idea-sort__input\" onChange={e => changeSortBy(e.target.value)}>\r\n                <option value=\"createdDate\" >Created date</option>\r\n                <option value=\"title\" >Title</option>\r\n              </NativeSelect>\r\n          </FormControl>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderList() {\r\n    const { ideas, deleteIdea } = this.props;\r\n    return (\r\n      <div className=\"idea-list\">\r\n        {ideas.map(idea => (\r\n          <IdeaTile\r\n            key={idea.id}\r\n            idea={idea}\r\n            onBlur={({ body, title }) => this.onIdeaBlur({ id: idea.id, body, title })}\r\n            onDelete={() => deleteIdea(idea.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { isLoading } = this.props;\r\n    if (isLoading) return <IdeaAddForm />;\r\n    return (\r\n      <div className=\"idea-container\">\r\n        {this.renderSortOptions()}\r\n        {this.renderList()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  loadIdeas,\r\n  addIdea,\r\n  updateIdea,\r\n  deleteIdea,\r\n  showNotification,\r\n  changeSortBy,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { data, isLoading, sortBy } = state.ideas;\r\n  return {\r\n    ideas: sortIdeas(data, sortBy),\r\n    isLoading,\r\n    sortBy,\r\n  };\r\n}\r\n\r\nfunction sortIdeas(ideas, sortBy) {\r\n  if (sortBy === 'createdDate') {\r\n    return ideas.sort((a, b) => {\r\n      return new Date(a.createdDate) - new Date(b.createdDate);\r\n    })\r\n  }\r\n  if (sortBy === 'title') {\r\n    return ideas.sort((a, b) => a.title.localeCompare(b.title));\r\n  }\r\n  return ideas;\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(IdeaList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Notification.scss';\r\n\r\nfunction Notification({ notification }) {\r\n  if (!notification) return null;\r\n  return (\r\n    <div className=\"notification\">\r\n      {notification}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    notification: state.notification.notification,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Notification);","import React, { Component } from 'react';\r\nimport IdeaList from './containers/IdeaList';\r\nimport Notification from './containers/Notification';\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"header\">\r\n                <span role=\"img\" aria-label=\"idea\"></span>\r\n                    {' '}\r\n                    Idea Board\r\n                </header>\r\n                <IdeaList />\r\n                <Notification />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport ideas from './idea';\r\nimport notification from './notification';\r\n\r\nexport default combineReducers({\r\n ideas,\r\n notification,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport configureStore from './store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n","\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(initialState = {}) {\r\n return createStore(\r\n   rootReducer,\r\n   initialState,\r\n   applyMiddleware(thunk),\r\n );\r\n}"],"sourceRoot":""}